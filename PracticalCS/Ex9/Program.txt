1 : using System;
2 : using System.IO;
3 : using System.Linq;
4 : 
5 : namespace Ex9
6 : {
7 :     class Program
8 :     {
9 :         //9.1 - 1
10 :         public static int CountClass(string filePath)
11 :         {
12 :             if (File.Exists(filePath))
13 :             {
14 :                 using (var reader = new StreamReader(filePath))
15 :                 {
16 :                     int counter = 0;
17 :                     while (!reader.EndOfStream)
18 :                     {
19 :                         var line = reader.ReadLine();
20 :                         if (line.Contains(" class "))
21 :                             counter++;
22 :                     }
23 :                     return counter;
24 :                 }
25 :             }
26 :             return 0;
27 :         }
28 :         //9.1 - 2
29 :         public static int CountClassAllLines(string filePath)
30 :         {
31 :             if (File.Exists(filePath))
32 :             {
33 :                 var lines = File.ReadAllLines(filePath);
34 :                 int counter = 0;
35 :                 foreach (var line in lines)
36 :                 {
37 :                     if (line.Contains(" class "))
38 :                         counter++;
39 :                 }
40 :                 return counter;
41 :             }
42 :             return 0;
43 :         }
44 :         //9.1 - 3
45 :         public static int CountClassLines(string filePath)
46 :         {
47 :             if (File.Exists(filePath))
48 :             {
49 :                 var lines = File.ReadLines(filePath);
50 :                 int counter = 0;
51 :                 foreach (var line in lines)
52 :                 {
53 :                     if (line.Contains(" class "))
54 :                         counter++;
55 :                 }
56 :                 return counter;
57 :             }
58 :             return 0;
59 :         }
60 :         //9.2
61 :         public static void AddIndexOfFile(string filePath)
62 :         {
63 :             var lines = File.ReadLines(filePath)
64 :                             .Select((s, n) => string.Format("{0} : {1}", n + 1, s));
65 :             var newFilePath = Path.ChangeExtension(filePath, ".txt");
66 :             File.WriteAllLines(newFilePath, lines);
67 :         }
68 :         public static void AddAfterEndOfLines(string toFilePath, string fromFilePath)
69 :         {
70 :             var lines = File.ReadAllLines(fromFilePath);
71 :             using(var writer=new StreamWriter(toFilePath, append: true))
72 :             {
73 :                 foreach (var line in lines)
74 :                     writer.WriteLine(line);
75 :             }
76 :         }
77 :         static void Main()
78 :         {
79 :             //Console.WriteLine(CountClass(@"D:\csPractice\PracticalCS\Ex9\Program.cs"));
80 :             //Console.WriteLine(CountClassAllLines(@"D:\csPractice\PracticalCS\Ex9\Program.cs"));
81 :             //Console.WriteLine(CountClassLines(@"D:\csPractice\PracticalCS\Ex9\Program.cs"));
82 :             AddIndexOfFile(@"D:\csPractice\PracticalCS\Ex9\Program.cs");
83 :         }
84 :     }
85 : }
